{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#", 
    "contentVersion": "1.0.0.0",
    "parameters": {
       "adminUsername": {
            "type": "string", 
            "metadata": {
                "description": "Admin username for VM"
            }
        },
        "sshKeyData": {
            "type": "string", 
            "metadata": {
                "description": "SSH Public key for VMs"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A1", 
            "metadata": {
                "description": "Size of the Virtual Machine."
            }, 
            "type": "string", 
            "allowedValues": [
                "Standard_A1", 
                "Standard_A2", 
                "Standard_A3", 
                "Standard_D1_v2", 
                "Standard_D2_v2", 
                "Standard_D3_v2"
            ]
        },
        "appPrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix for each component (VMs, networks, etc)"
            },
            "maxLength": 11
        },
        "existingAtlasToken": {
            "type": "string", 
            "metadata": {
                "description": "Your existing access token from Atlas"
            }
        }, 
        "existingAtlasInfraName": {
            "type": "string", 
            "metadata": {
                "description": "The name of your existing infrastructure in Atlas (username/infraName)"
            }
        }
    },
    "variables": {
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetIDRef'))]", 
        "subnet1Name": "Subnet-1", 
        "vmStorageAccountContainerName": "vhds", 
        "addressPrefix": "10.0.0.0/16", 
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]", 
        "subnet1Prefix": "10.0.0.0/24", 
        "publicIPAddressType": "Dynamic", 
        "vnetIDRef": "[concat(parameters('appPrefix'),'_VNET')]",
        "imagePublisher": "Canonical", 
        "customScriptFilePath": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/consul-on-ubuntu/install-consul.sh", 
        "vmStorageAccountContainerName": "vhds", 
        "numberOfInstances": 3, 
        "customScriptCommandToExecute": "bash install-consul.sh", 
        "imageSKU": "14.04.3-LTS", 
        "imageOffer": "UbuntuServer", 
        "storageAccountName": "[concat(uniqueString(resourceGroup().id), parameters('appPrefix'))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "apiVersion": "2015-06-15"
    },
    "resources": [
        {
            "properties": {
                "accountType": "Standard_LRS"
            }, 
            "type": "Microsoft.Storage/storageAccounts", 
            "location": "[resourceGroup().location]", 
            "apiVersion": "[variables('apiVersion')]", 
            "name": "[variables('storageAccountName')]"
        },
        {
            "name": "[concat('publicIP', copyindex())]",
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "copy": {
                "count": "[variables('numberOfInstances')]", 
                "name": "ipLoop"
            }, 
            "type": "Microsoft.Network/publicIPAddresses", 
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "properties": {}, 
            "type": "Microsoft.Compute/availabilitySets", 
            "location": "[resourceGroup().location]", 
            "apiVersion": "[variables('apiVersion')]", 
            "name": "[concat(parameters('appPrefix'),'_AS')]"
        },
        {
            "name": "[concat(parameters('appPrefix'),'_LB')]", 
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('appPrefix'),'_VNET')]"
            ], 
            "type": "Microsoft.Network/loadBalancers", 
            "properties": {
                "frontendIPConfigurations": [
                {
                    "name": "loadBalancerFrontEnd", 
                    "properties": {
                    "subnet": {
                        "id": "[variables('subnet1Ref')]"
                    }
                    }
                }
                ], 
                "loadBalancingRules": [
                {
                    "name": "lbrule", 
                    "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
                    }, 
                    "backendPort": 8500, 
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/probes/lbprobe')]"
                    }, 
                    "protocol": "Tcp", 
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/backendAddressPools/loadBalancerBackEnd')]"
                    }, 
                    "frontendPort": 8500, 
                    "idleTimeoutInMinutes": 15
                    }
                }
                ], 
                "backendAddressPools": [
                {
                    "name": "loadBalancerBackEnd"
                }
                ], 
                "probes": [
                {
                    "name": "lbprobe", 
                    "properties": {
                    "protocol": "Tcp", 
                    "numberOfProbes": 2, 
                    "intervalInSeconds": 15, 
                    "port": 8500
                    }
                }
                ]
            }
        },
        {
            "name": "[concat('publicIP', copyindex())]",
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "copy": {
                "count": "[variables('numberOfInstances')]", 
                "name": "ipLoop"
            }, 
            "type": "Microsoft.Network/publicIPAddresses", 
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "properties": {
                "securityRules": [
                {
                    "name": "ssh_rule", 
                    "properties": {
                    "priority": 100, 
                    "direction": "Inbound", 
                    "protocol": "Tcp", 
                    "description": "Allow external SSH", 
                    "access": "Allow", 
                    "destinationPortRange": "22", 
                    "sourcePortRange": "*", 
                    "destinationAddressPrefix": "*", 
                    "sourceAddressPrefix": "Internet"
                    }
                }
                ]
            }, 
            "type": "Microsoft.Network/networkSecurityGroups", 
            "location": "[resourceGroup().location]", 
            "apiVersion": "[variables('apiVersion')]", 
            "name": "[concat(parameters('appPrefix'),'_SG')]"
        },
        {
            "name": "[concat(parameters('appPrefix'),'_VNET')]", 
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('appPrefix'),'_SG')]"
            ], 
            "type": "Microsoft.Network/virtualNetworks", 
            "properties": {
                "subnets": [
                {
                    "name": "[variables('subnet1Name')]", 
                    "properties": {
                    "addressPrefix": "[variables('subnet1Prefix')]"
                    }
                }
                ], 
                "addressSpace": {
                "addressPrefixes": [
                    "[variables('addressPrefix')]"
                ]
                }
            }
        },
        {
            "name": "[concat(parameters('appPrefix'), '_vm', copyIndex(), '/extension')]", 
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('appPrefix'), '_vm', copyIndex())]"
            ], 
            "copy": {
                "count": "[variables('numberOfInstances')]", 
                "name": "virtualMachineLoop"
            }, 
            "type": "Microsoft.Compute/virtualMachines/extensions", 
            "properties": {
                "autoUpgradeMinorVersion": true, 
                "typeHandlerVersion": "1.4", 
                "settings": {
                "fileUris": [
                    "[variables('customScriptFilePath')]"
                ]
                }, 
                "protectedSettings": { 
                    "commandToExecute": "[concat(variables('customScriptCommandToExecute'),' ', parameters('existingAtlasInfraName'), ' ', parameters('existingAtlasToken'))]"
                },
                "type": "CustomScriptForLinux", 
                "publisher": "Microsoft.OSTCExtensions"
            }
        }
    ]
}
