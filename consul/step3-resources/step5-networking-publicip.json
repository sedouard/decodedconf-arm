{
    "resources": [
    {
        "name": "[concat('publicIP', copyindex())]",
        "apiVersion": "[variables('apiVersion')]", 
        "location": "[resourceGroup().location]", 
        "copy": {
            "count": "[variables('numberOfInstances')]", 
            "name": "ipLoop"
        }, 
        "type": "Microsoft.Network/publicIPAddresses", 
        "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
        }
    },
    {
        "type": "Microsoft.Network/networkSecurityGroups", 
        "location": "[resourceGroup().location]", 
        "apiVersion": "[variables('apiVersion')]", 
        "name": "[concat(parameters('appPrefix'),'_SG')]",
        "properties": {
            "securityRules": [
            {
                "name": "ssh_rule", 
                "properties": {
                "priority": 100, 
                "direction": "Inbound", 
                "protocol": "Tcp", 
                "description": "Allow external SSH", 
                "access": "Allow", 
                "destinationPortRange": "22", 
                "sourcePortRange": "*", 
                "destinationAddressPrefix": "*", 
                "sourceAddressPrefix": "Internet"
                }
            }
            ]
        }
    }, 
        {
        "name": "[concat(parameters('appPrefix'),'_VNET')]", 
        "apiVersion": "[variables('apiVersion')]", 
        "location": "[resourceGroup().location]", 
        "dependsOn": [
            "[concat('Microsoft.Network/networkSecurityGroups/', parameters('appPrefix'),'_SG')]"
        ], 
        "type": "Microsoft.Network/virtualNetworks", 
        "properties": {
            "subnets": [
            {
                "name": "[variables('subnet1Name')]", 
                "properties": {
                "addressPrefix": "[variables('subnet1Prefix')]"
                }
            }
            ], 
            "addressSpace": {
            "addressPrefixes": [
                "[variables('addressPrefix')]"
            ]
            }
        }
    }, 
    {
        "name": "[concat(parameters('appPrefix'),'_LB')]", 
        "apiVersion": "[variables('apiVersion')]", 
        "location": "[resourceGroup().location]", 
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('appPrefix'),'_VNET')]"
        ], 
        "type": "Microsoft.Network/loadBalancers", 
        "properties": {
            "frontendIPConfigurations": [
            {
                "name": "loadBalancerFrontEnd", 
                "properties": {
                "subnet": {
                    "id": "[variables('subnet1Ref')]"
                }
                }
            }
            ], 
            "loadBalancingRules": [
            {
                "name": "lbrule", 
                "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
                }, 
                "backendPort": 8500, 
                "probe": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/probes/lbprobe')]"
                }, 
                "protocol": "Tcp", 
                "backendAddressPool": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/backendAddressPools/loadBalancerBackEnd')]"
                }, 
                "frontendPort": 8500, 
                "idleTimeoutInMinutes": 15
                }
            }
            ], 
            "backendAddressPools": [
            {
                "name": "loadBalancerBackEnd"
            }
            ], 
            "probes": [
            {
                "name": "lbprobe", 
                "properties": {
                "protocol": "Tcp", 
                "numberOfProbes": 2, 
                "intervalInSeconds": 15, 
                "port": 8500
                }
            }
            ]
        }
    }
    ]
}
